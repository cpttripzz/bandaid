imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    trusted_proxies: ['127.0.0.1']
    translator:      { fallback: %locale% }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    globals:
        root_path: %kernel.root_dir%/../web
# Assetic Configuration
assetic:

    filters:
        less:
            node: /usr/bin/nodejs
            node_paths: [/opt/lessc/lib, /usr/lib/node_modules, /usr/local/lib/node_modules]
            apply_to: "\.less$"
        cssrewrite: ~
        cssembed:
            jar: %kernel.root_dir%/Resources/java/cssembed-0.4.5.jar

        yui_css:
            jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.8.jar

        yui_js:
            jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.8.jar
    assets:
            jquery_js:
                inputs:
                    - '%kernel.root_dir%/../components/jquery/jquery.min.js'
                filters: [?yui_js]
            bootstrap_js:
                inputs:
                    - '%kernel.root_dir%/../vendor/twbs/bootstrap/js/transition.js'
                    - '%kernel.root_dir%/../vendor/twbs/bootstrap/js/alert.js'
                    - '%kernel.root_dir%/../vendor/twbs/bootstrap/js/modal.js'
                    - '%kernel.root_dir%/../vendor/twbs/bootstrap/js/dropdown.js'
                    - '%kernel.root_dir%/../vendor/twbs/bootstrap/js/scrollspy.js'
                    - '%kernel.root_dir%/../vendor/twbs/bootstrap/js/tab.js'
                    - '%kernel.root_dir%/../vendor/twbs/bootstrap/js/tooltip.js'
                    - '%kernel.root_dir%/../vendor/twbs/bootstrap/js/popover.js'
                    - '%kernel.root_dir%/../vendor/twbs/bootstrap/js/button.js'
                    - '%kernel.root_dir%/../vendor/twbs/bootstrap/js/collapse.js'
                    - '%kernel.root_dir%/../vendor/twbs/bootstrap/js/carousel.js'
                    - '%kernel.root_dir%/../vendor/twbs/bootstrap/js/affix.js'
                filters: [?yui_js]
            bootstrap_less:
                inputs:
                    - '%kernel.root_dir%/../vendor/twbs/bootstrap/less/bootstrap.less'
                filters: [less,cssembed]


# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: %kernel.root_dir%/data/data.db3
        # path:     %database_path%
        types:
            json: Sonata\Doctrine\Types\JsonType
    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true
        metadata_cache_driver: redis
        query_cache_driver: redis
#        mappings:
#            ApplicationSonataUserBundle:
#                type: annotation

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:     { type: memory }

# FOS User Configuration
fos_user:
    db_driver: orm
    firewall_name: secure_area
    user_class: ZE\BABundle\Entity\User
    registration:
        confirmation:
            enabled:    false # change to true for required email confirmation
    group:
        group_class: ZE\BABundle\Entity\Group
    profile:  # Authentication Form
        form:
            type:               fos_user_profile
            handler:            fos_user.profile.form.handler.default
            name:               fos_user_profile_form
            validation_groups:  [Authentication] # Please note : this is not the default value


hwi_oauth:
    connect:
        account_connector: zeba_user_provider
        confirmation: true
        registration_form_handler: hwi_oauth.registration.form.handler.fosub_bridge
        registration_form: fos_user.registration.form
    firewall_name: main

    resource_owners:
        github:
            type:                github
            client_id:           19a3e93bb28c7df99257
            client_secret:       e294564e11f60bb0edda2c24d443b2f667c7aa7a
            scope:               "user:email"
         #twitter:
            #type:                twitter
            #client_id:           <client_id>
            #client_secret:       <client_secret>
        facebook:
            type:                facebook
            client_id:           683390381735822
            client_secret:       bf791950b8e6500f10fb6188d10952c6
            options:
                display: popup
        google:
            type:                google
            client_id:           309796006487-b6ju56r441plsk1uf8l2vod0f6v0efe9.apps.googleusercontent.com
            client_secret:       eGPvuTMwuT4AkpHcTejMymga
            scope:               "https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile"

    fosub:
        # try 30 times to check if a username is available (foo, foo1, foo2 etc)
        username_iterations: 30

        # mapping between resource owners (see below) and properties
        properties:
            github: githubID
            #twitter: twitterID
            #facebook: faecbookID
            #google: googleID

bazinga_geocoder:
    #fake_ip:    123.345.643.133
    #fake_ip:    192.114.71.13
    fake_ip:    72.229.28.185
    providers:
#        free_geo_ip:          []
#        yandex:
#            locale:               ~
#            toponym:              ~
        google_maps:
            locale:               ~
            region:               ~
            use_ssl:              false
#        openstreetmap:
#            locale:               ~
stof_doctrine_extensions:
    default_locale: en_US
    orm:
        default:
            sluggable: true
            timestampable: true
jcroll_foursquare_api:
    client_id:  NOP0Q1ZIA1E11J5EDO54GYTKNJUHTXB4DLUCFXTDKOOYGMSW
    client_secret:    SIYPSKTPUEEAUSVRZKFFN21F5O0EPQ4OU3STX5AFVGD52VI5

liip_imagine:
    driver:               gd

    resolvers:
        default:
          web_path:
            web_root: %kernel.root_dir%/../web
            # %kernel.root_dir%/../web/img is the folder where filtered images will be created!
            cache_prefix: media/cache
            # media/cache the prefix of folder where the cached images will be created
    filter_sets:
        cache: ~
        thumb:
            quality: 75
            filters:
                thumbnail: { size: [25, 20], mode: outbound }
        assoc:
            quality: 75
            filters:
                thumbnail: { size: [200, 120], mode: outbound }

snc_redis:

    clients:
        default:
            type: predis
            alias: default
            dsn: redis://localhost
        cache:
            type: predis
            alias: cache
            dsn: redis://secret@localhost/1
            options:
               profile: 2.2
               connection_timeout: 10
               read_write_timeout: 30
    session:
        client: default
        use_as_default: true
    doctrine:
        metadata_cache:
            client: cache
            entity_manager: default          # the name of your entity_manager connection
            document_manager: default        # the name of your document_manager connection
        result_cache:
            client: cache
            entity_manager: [default, read]  # you may specify multiple entity_managers
        query_cache:
            client: cache
            entity_manager: default
doctrine_cache:
    providers:
        redis_cache:
            type: 'redis'
fos_oauth_server:
    db_driver: orm
    client_class:        ZE\BABundle\Entity\Client
    access_token_class:  ZE\BABundle\Entity\AccessToken
    refresh_token_class: ZE\BABundle\Entity\RefreshToken
    auth_code_class:     ZE\BABundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_manager
nelmio_api_doc: ~
lexik_jwt_authentication:
  pass_phrase: "123456"
  private_key_path: "%kernel.root_dir%/var/jwt/private.pem"
  public_key_path: "%kernel.root_dir%/var/jwt/public.pem"
  token_ttl: 86400

nelmio_cors:
    paths:
        '/login_check':
            allow_origin: ['http://localhost:4200']
            allow_headers: ['origin', 'content-type','X-Custom-Auth','authorization']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE','OPTIONS']
            max_age: 3600
        '/api/*':
            allow_origin: ['http://localhost:4200']
            allow_headers: ['accept', 'origin', 'content-type','X-Custom-Auth','authorization']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE','OPTIONS']
            max_age: 3600
fos_rest:
    routing_loader:
        default_format: json
             # ensure distinct results, useful when ORM queries are using GROUP BY statements